[workspace.package]
authors = ["Thalia Archibald <thalia@archibald.dev>"]
edition = "2021"
repository = "https://github.com/thaliaarchi/lazy-wspace"
license = "MPL-2.0"

[workspace]
members = [
  "lazy-wspace",
  "lazy-wspace-macros",
  "wspace-syntax",
  "wspace-syntax-test",
]
resolver = "2"

[patch.crates-io]
# Waiting on https://github.com/rust-phf/rust-phf/pull/289
phf = { git = "https://github.com/thaliaarchi/rust-phf" }

[profile.release]
lto = true

[workspace.lints.clippy]
cargo = "warn"
nursery = "warn"
# pedantic = "warn"

## clippy::nursery
option_if_let_else = { level = "allow", priority = 2 }
use_self = { level = "allow", priority = 2 }

## clippy::pedantic
enum_glob_use = { level = "allow", priority = 2 }
map_unwrap_or = "warn"
match_same_arms = { level = "allow", priority = 2 }
module_name_repetitions = { level = "allow", priority = 2 }
redundant_closure_for_method_calls = { level = "allow", priority = 2 }
semicolon_if_nothing_returned = "deny"
similar_names = { level = "allow", priority = 2 }
single_match_else = { level = "allow", priority = 2 }
uninlined_format_args = "deny"

## clippy::restriction
dbg_macro = "warn"
# default_numeric_fallback = "warn"
filetype_is_file = "warn"
fn_to_numeric_cast_any = "warn"
format_push_string = "warn"
# iter_over_hash_type = "warn" # Rust 1.75
lossy_float_literal = "warn"
missing_assert_message = "warn"
# missing_asserts_for_indexing = "warn"
redundant_type_annotations = "warn"
rest_pat_in_fully_bound_structs = "deny"
self_named_module_files = "deny"
string_add = "warn"
string_lit_chars_any = "warn"
string_to_string = "warn"
tests_outside_test_module = "warn"
try_err = "warn"
undocumented_unsafe_blocks = "deny"
unnecessary_safety_comment = "deny"
unnecessary_safety_doc = "deny"

## clippy::style
module_inception = "allow"

## Allowed until my API is more stable
cognitive_complexity = { level = "allow", priority = 2 } # nursery
missing_const_for_fn = { level = "allow", priority = 2 } # nursery
missing_docs_in_private_items = "allow" # restriction
missing_errors_doc = { level = "allow", priority = 2 } # pedantic
missing_panics_doc = { level = "allow", priority = 2 } # pedantic
must_use_candidate = { level = "allow", priority = 2 } # pedantic
return_self_not_must_use = { level = "allow", priority = 2 } # pedantic
todo = "allow" # restriction

[workspace.lints.rust]
rust_2018_compatibility = "warn"
rust_2018_idioms = "warn"
rust_2021_compatibility = "warn"
unused = "warn"

elided_lifetimes_in_paths = "deny"
explicit_outlives_requirements = "warn"
meta_variable_misuse = "warn"
missing_abi = "deny"
# missing_copy_implementations = "warn"
missing_debug_implementations = "warn"
pointer_structural_match = "deny"
single_use_lifetimes = "warn"
unsafe_op_in_unsafe_fn = "warn"
unused_import_braces = "warn"
unused_lifetimes = "warn"
unused_qualifications = "warn"
unused_tuple_struct_fields = "warn"
variant_size_differences = "warn"

## Allowed until my API is more stable
missing_docs = "allow"
unreachable_pub = "allow"
